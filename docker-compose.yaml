name: boundary-condition

version: '3'

networks:
  loki:
    driver: bridge

services:
  app:
    container_name: nestjs
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    volumes:
      - ./src:/app/src
    environment:
      SERVER_PORT: ${SERVER_PORT}
      CLIENT_PORT: ${CLIENT_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_SYNC: ${POSTGRES_SYNC}
      GF_USER: ${GF_USER}
      GF_PASSWORD: ${GF_PASSWORD}
    depends_on:
      - loki
    env_file:
      - .env

  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    command: '--config.file=/etc/promtail/promtail.config.yaml'
    volumes:
      - ./config/promtail.config.yaml:/etc/promtail/promtail.config.yaml
      - ./logs:/logs
      - ./logs/postgres:/var/log/postgresql
    restart: always
    depends_on:
      - prometheus
    networks:
      - loki

  loki:
    container_name: loki
    image: grafana/loki:latest
    user: root
    command: '--config.file=/etc/loki/loki.config.yaml'
    volumes:
      - ./config/loki.config.yaml:/etc/loki/loki.config.yaml
      - ./loki:/loki
    ports:
      - '3100:3100'
    restart: always
    depends_on:
      - consul
    networks:
      - loki

  consul:
    image: hashicorp/consul
    container_name: consul
    ports:
      - '8500:8500'
      - '8600:8600/udp'
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    command: 'agent -dev -client=0.0.0.0'
    volumes:
      - ./data:/consul/data
    networks:
      - loki

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.config.yaml'
    volumes:
      - ./config/prometheus.config.yaml:/etc/prometheus/prometheus.config.yaml
      - ./prometheus:/prometheus
    ports:
      - '9090:9090'
    restart: always
    networks:
      - loki

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - '3500:3000'
    volumes:
      - ./grafana:/var/lib/grafana
    restart: always
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_PASSWORD}
    env_file:
      - .env
    networks:
      - loki

  node_exporter:
    container_name: node-exporter
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - loki

  postgres_exporter:
    container_name: postgres-exporter
    image: bitnami/postgres-exporter:latest
    environment:
      DATA_SOURCE_NAME: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}'
    ports:
      - '${POSTGRES_PORT}:9187'
    env_file:
      - .env
    networks:
      - loki
